// Generated by CoffeeScript 1.4.0
(function() {

  $(document).ready(function() {
    var aggregateHValues, map, mapOptions;
    aggregateHValues = function(lat, long) {
      var pwnia;
      pwnia = {};
      pwnia.name = $('#hName').val();
      pwnia.description = $('#hDescription').val();
      pwnia.fl = $('#checkbox-2').is(":checked");
      pwnia.sf = $('#checkbox-3').is(":checked");
      pwnia.el = $('#checkbox-4').is(":checked");
      pwnia.fi = $('#checkbox-5').is(":checked");
      pwnia.td = $('#checkbox-6').is(":checked");
      pwnia.sd = $('#checkbox-7').is(":checked");
      pwnia.lat = lat;
      pwnia.long = long;
      return JSON.stringify(pwnia);
    };
    $('#submitHelp').on('click', function() {
      $.mobile.loading('show', {
        text: 'submitting your request...',
        textVisible: true,
        theme: 'a',
        html: ""
      });
      return Sandy.getLocation(function(position) {
        return $.ajax('https://api.mongolab.com/api/1/databases/sandy/collections/pwnia?apiKey=50958597e4b0268b29eee111', {
          type: 'POST',
          contentType: 'application/json',
          data: aggregateHValues(position.coords.latitude, position.coords.longitude),
          error: function(jqXHR, textStatus, errorThrown) {
            return alert("AJAX Error: " + textStatus + ", " + errorThrown);
          },
          success: function(data, textStatus, jqXHR) {
            var changePage;
            $.mobile.loading('hide');
            $("#hRequestInfo").popup("open");
            changePage = function() {
              $('#PWNIAButton').trigger('click');
              return $.mobile.changePage("#helpMePage", {
                transition: "slide"
              });
            };
            return setTimeout(changePage, 2000);
          }
        });
      });
    });
    mapOptions = {
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map(document.getElementById('help_map_canvas'), mapOptions);
    return $('#PWNIAButton').on('click', function() {
      var bounds, getPwniaTypes, infowindow, jqXHR, refreshMap;
      $.mobile.loading('show', {
        text: 'Loading people in need near you',
        textVisible: true,
        theme: 'a',
        html: ""
      });
      bounds = new google.maps.LatLngBounds();
      refreshMap = function() {
        google.maps.event.trigger(map, 'resize');
        map.setCenter(bounds.getCenter());
        return map.fitBounds(bounds);
      };
      google.maps.event.addListenerOnce(map, 'idle', refreshMap);
      setTimeout(refreshMap, 300);
      infowindow = new google.maps.InfoWindow;
      jqXHR = $.getJSON('https://api.mongolab.com/api/1/databases/sandy/collections/pwnia?apiKey=50958597e4b0268b29eee111', function(data) {
        return $.each(data, function(i, help) {
          var latLng, letter, letterNumber, marker;
          latLng = new google.maps.LatLng(help.lat, help.long);
          bounds.extend(latLng);
          letterNumber = "A".charCodeAt(0) + (i % 25);
          letter = String.fromCharCode(letterNumber);
          marker = new google.maps.Marker({
            map: map,
            animation: google.maps.Animation.DROP,
            position: latLng,
            icon: "img/markers/red_Marker" + letter + ".png"
          });
          return google.maps.event.addListener(marker, 'click', function() {
            if (!help.description) {
              help.description = "";
            }
            infowindow.setContent("<strong>" + help.name + "</strong> <br/> <ul> " + (getPwniaTypes(help)) + " </ul> <i>" + help.description + "</i>");
            return infowindow.open(map, marker);
          });
        });
      });
      jqXHR.complete(function() {
        return setTimeout(refreshMap, 300);
      });
      return getPwniaTypes = function(help) {
        var types;
        types = "";
        if (help.fl) {
          types += "<li>Flooding</li>";
        }
        if (help.sf) {
          types += "<li>Shortage of food</li>";
        }
        if (help.el) {
          types += "<li>Electricity</li>";
        }
        if (help.fi) {
          types += "<li>Fire</li>";
        }
        if (help.td) {
          types += "<li>Tree Down</li>";
        }
        if (help.sd) {
          types += "<li>Structurial Damage</li>";
        }
        return types;
      };
    });
  });

}).call(this);
